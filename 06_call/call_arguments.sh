############ call__arguments.sh ############
#Sample arguments file for squire call

# Bash script to save and import arguments for the entire SQuIRE project

## Data information REQUIRED
virtual_env='squire'

fastq_folder=/scratch/qtbui_TE/raw_data/GEP4TWAS_rawdata
#Location of fastq files

samplenames=`ls $fastq_folder |  xargs | sed -e 's/ /,/g'`
#Comma separated list of sample names found in Fastq files

build=Marouch
#UCSC designation for genome build, eg. 'hg38'; if using custom repeatmasker file (see below), enter custom build name

strandedness=1
#'0' if unstranded, 1 if first-strand eg Illumina Truseq, dUTP, NSR, NNSR, 2 if second-strand, eg Ligation, Standard

read_length=100
#read length of FASTQ data

projectname=Marouch

r1suffix=_R1
# Common suffix of all r1 fastq files (e.g. for project1_file1_r1.fastq.gz, r1suffix='_r1').  If unpaired data, r1suffix='.fastq'.
r2suffix=_R2
# Common suffix of all r2 fastq files (e.g. for project1_file1_r2.fastq, r2suffix='_r2').  If unpaired data, r2suffix='False'


#ADVANCED
EM=auto
#desired number of EM iterations other than auto

temp_folder=/scratch/qtbui_TE/06_call/tmp
#Location or variable (such as $TMPDIR) to store intermediate files

condition1=Cultivated
#Name of condition for group 1 in squire Call
condition2=Wild
#Name of condition for group 2 in squire Call

group1=A0008_ATATGGAT-CTGTATTA-AH25VGDSXY_L001,A0014_GCGCAAGC-TCACGCCG-AH25VGDSXY_L001,A0074_AAGATACT-ACTTACAT-AH25VGDSXY_L001,A0110_GGAGCGTC-GTCCGTGC-AH25VGDSXY_L001,A0157_ATGGCATG-AAGGTACC-AH25VGDSXY_L001,A0217_GCAATGCA-GGAACGTT-AH25VGDSXY_L001,A0544_GTTCCAAT-AATTCTGC-AH25VGDSXY_L001,A0654_ACAGGCGC-CTCTGCCT-AHYL3WDSXX_L004,A0665_ACCTTGGC-GGCCTCAT-AH25VGDSXY_L001,A0682_ATATCTCG-ATCTTAGT-AH25VGDSXY_L001,A0882_GTCTACAC-GCCAAGGT-AHYL3WDSXX_L004,A1267_ATTGTGAA-TGCATTGC-AHYL3WDSXX_L004,A1275_GTGAATAT-TCTCATTC-AHYL3WDSXX_L004,A1314_CAATTAAC-CGAGATAT-AHYL3WDSXX_L004,A1319_TGGCCGGT-TAGAGCGC-AHYL3WDSXX_L004,A1333_AACTGTAG-ACGCCGCA-AHYL3WDSXX_L004,A1352_GCGCTCTA-GCTCCGAC-AH25VGDSXY_L001,A1458_AGTACTCC-AACCTGTT-AHYL3WDSXX_L004,A1600_GGTCACGA-GTATTATG-AHYL3WDSXX_L004,A1601_GACGTCTT-GGTTCACC-AHYL3WDSXX_L004,A1690_TGCGAGAC-CATTGTTG-AHYL3WDSXX_L004,A1714_AACAGGTT-ATACCAAG-AH25VGDSXY_L001,A1721_CATAGAGT-TGCCACCA-AHYL3WDSXX_L004,A1792_CTGCTTCC-GATAGATC-AHYL3WDSXX_L004,A2067_GGTGAACC-GCGTTGGA-AH25VGDSXY_L001,A2137_CAACAATG-CTTCACGG-AH25VGDSXY_L001,A2204_TGGTGGCA-TCCTGTAA-AH25VGDSXY_L001,A2313_TCATCCTT-AGCGAGCT-AHYL3WDSXX_L004,A2314_AGGCAGAG-AGAATGCC-AH25VGDSXY_L001,A2351_AGGTTATA-CAGTTCCG-AHYL3WDSXX_L004,A2645_GAATGAGA-GAGGCATT-AH25VGDSXY_L001,A3024_GAACCGCG-TGACCTTA-AHYL3WDSXX_L004,A3509_CTCACCAA-CTAGGCAA-AHYL3WDSXX_L004,A3517_TCTGTTGG-TCGAATGG-AHYL3WDSXX_L004,A3522_TATCGCAC-CTTAGTGT-AHYL3WDSXX_L004,A4082_ACTCGTGT-ATTGGAAC-AHYL3WDSXX_L004,A5406_CGCTATGT-TCCGACAC-AHYL3WDSXX_L004,A5614_TGCGGCGT-CCTCGGTA-AH25VGDSXY_L001,A5615_CATAATAC-TTCTAACG-AH25VGDSXY_L001,A5618_GATCTATC-ATGAGGCT-AH25VGDSXY_L001,A5620_AGCTCGCT-GCAGAATC-AH25VGDSXY_L001,A5790_CGGAACTG-CACTACGA-AH25VGDSXY_L001,A5810_TAAGGTCA-TGTCGTAG-AH25VGDSXY_L001
#group1=$(bash /scratch/qtbui_TE/analysis/squire/scripts_squire/additional_scripts/call_give_conditions/get_list_of_samples.sh $condition1)
#Name of basenames of samples in group 1
group2=CH123_TAAGTGGT-CTTAAGCC-AHYL3WDSXX_L004,CH128_CGTTAGAA-TTCAGGTC-AHYL3WDSXX_L004,KR169-1_GGAGCGTC-GTCCGTGC-AHYL3WDSXX_L004,KR170-4_ATGGCATG-AAGGTACC-AHYL3WDSXX_L004,KR176-1_GCAATGCA-GGAACGTT-AHYL3WDSXX_L004,KR181-2_AGCCTCAT-AGTAGAGA-AHYL3WDSXX_L004,KR84-1_TACTCATA-CCTGTGGC-AHYL3WDSXX_L004,KR91-1_CGTCTGCG-TTCACAAT-AHYL3WDSXX_L004,KZ101-1_CGGACAAC-TCCGGATT-AHYL3WDSXX_L004,KZ113-2_ATATGGAT-CTGTATTA-AHYL3WDSXX_L004,KZ114-1_GCGCAAGC-TCACGCCG-AHYL3WDSXX_L004,KZ123-2_CAAGCTAG-ACATAGCG-AH25VGDSXY_L001,KZ124-1_AAGATACT-ACTTACAT-AHYL3WDSXX_L004,KZ125-1_CCATTCGA-GTTGTCCG-AH25VGDSXY_L001,KZ127-1_TGGATCGA-GTGCGATA-AH25VGDSXY_L001,KZ137-1_GTTCCAAT-AATTCTGC-AHYL3WDSXX_L004,KZ150-8_ACCTTGGC-GGCCTCAT-AHYL3WDSXX_L004,KZ159-1_TTATAACC-GATATCGA-AH25VGDSXY_L001,KZ165-1_GATTCTGC-GACGAGAG-AHYL3WDSXX_L004,KZ167-1_GGACTTGG-CGCAGACG-AH25VGDSXY_L001,KZ231-1_TCGTAGTG-AGACTTGG-AHYL3WDSXX_L004,KZ232-1_CTCTCGTC-TATAACCT-AH25VGDSXY_L001,KZ236-1_TTGGACTC-GGAAGCAG-AH25VGDSXY_L001,KZ247-1_CTACGACA-GAGTCCAA-AHYL3WDSXX_L004,KZ259-1_AAGTCCAA-TATGAGTA-AH25VGDSXY_L001,KZ261-1_CCAAGTCT-AAGGATGA-AH25VGDSXY_L001,KZ264-1_ATCCACTG-AGGTGCGT-AH25VGDSXY_L001,KZ74-5_AGTTCAGG-CCAACAGA-AH25VGDSXY_L001,KZ82-1_GGCTTAAG-TCGTGACC-AH25VGDSXY_L001,KZ87-2_TCTCTACT-CGCGGTTC-AH25VGDSXY_L001,UZ10-1_GCTTGTCA-GAACATAC-AH25VGDSXY_L001,UZ11-5_TTGCCTAG-ACCACTTA-AH25VGDSXY_L001,UZ9-1_AATCCGGA-CTACAGTT-AH25VGDSXY_L001
#group2=$(bash /scratch/qtbui_TE/analysis/squire/scripts_squire/additional_scripts/call_give_conditions/get_list_of_samples.sh $condition2)
#Name of basenames of samples in group 2

echo group1 : $group1

echo group2 : $group2


output_format=pdf
#Desired output of figures as html or pdf

#normlib="--normlib"
#Uncomment to normalize bedgraphs by library size (default = False) for squire Draw.

verbosity="--verbosity"
#report progress of SQuIRE script

trim3=0

fetch_folder=/scratch/qtbui_TE/03_fetch/Marouch
clean_folder=/scratch/qtbui_TE/02_clean/Marouch
map_folder=/scratch/qtbui_TE/04_map/out
count_folder=/scratch/qtbui_TE/05_count/TE_counts/
draw_folder=/scratch/qtbui_TE/07_draw
call_folder=/scratch/qtbui_TE/06_call/out

